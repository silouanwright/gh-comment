#!/bin/bash
set -euo pipefail

# Master test runner for all help text examples
# Generated by 02_parse_help.sh

echo "üöÄ Running all help text examples..."
echo "üìä Test results will be saved to: $TEST_RESULTS_FILE"
echo ""

# Initialize results file
echo "# Integration test results - $(date)" > "$TEST_RESULTS_FILE"
echo "# Format: command:example:status" >> "$TEST_RESULTS_FILE"
echo "" >> "$TEST_RESULTS_FILE"

# Source environment
if [[ -n "${1:-}" ]] && [[ -f "$1" ]]; then
    source "$1"
    echo "‚úÖ Loaded environment: $1"
else
    echo "‚ùå ERROR: Please provide test environment file as first argument"
    echo "   Usage: $0 path/to/test-env-TIMESTAMP.sh"
    exit 1
fi

# Run all example scripts
TEST_SCRIPTS=($(find "$(dirname "$0")" -name "*_examples.sh" | sort))

if [[ ${#TEST_SCRIPTS[@]} -eq 0 ]]; then
    echo "‚ùå ERROR: No test scripts found"
    exit 1
fi

echo "üìã Found ${#TEST_SCRIPTS[@]} test script(s)"
echo ""

for script in "${TEST_SCRIPTS[@]}"; do
    echo "‚ñ∂Ô∏è  Running: $(basename "$script")"
    bash "$script"
done

echo ""
echo "üìä Integration test complete!"
echo "üìã Results summary:"

# Count results
TOTAL_TESTS=$(grep -c ":" "$TEST_RESULTS_FILE" 2>/dev/null || echo "0")
SUCCESS_COUNT=$(grep -c ":SUCCESS" "$TEST_RESULTS_FILE" 2>/dev/null || echo "0")
FAILED_COUNT=$(grep -c ":FAILED" "$TEST_RESULTS_FILE" 2>/dev/null || echo "0")
WARNING_COUNT=$(grep -c ":WARNING" "$TEST_RESULTS_FILE" 2>/dev/null || echo "0")

echo "  ‚Ä¢ Total tests: $TOTAL_TESTS"
echo "  ‚Ä¢ Successful: $SUCCESS_COUNT"
echo "  ‚Ä¢ Failed: $FAILED_COUNT"
echo "  ‚Ä¢ Warnings: $WARNING_COUNT"

if [[ "$FAILED_COUNT" -gt 0 ]]; then
    echo ""
    echo "‚ùå Failed tests:"
    grep ":FAILED" "$TEST_RESULTS_FILE" | sed 's/:FAILED//' | sed 's/^/  ‚Ä¢ /'
fi

if [[ "$WARNING_COUNT" -gt 0 ]]; then
    echo ""
    echo "‚ö†Ô∏è  Warnings:"
    grep ":WARNING" "$TEST_RESULTS_FILE" | sed 's/:WARNING//' | sed 's/^/  ‚Ä¢ /'
fi

echo ""
echo "üìÑ Detailed results: $TEST_RESULTS_FILE"
