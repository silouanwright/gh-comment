name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  release:
    name: Create Release with Binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run tests before release
        run: |
          go test ./...
          echo "âœ… All tests passed"

      - name: Build and release binaries
        uses: cli/gh-extension-precompile@v2
        with:
          generate_attestations: true
          go_version_file: go.mod
          build_script_override: |
            #!/bin/bash
            set -e
            tag="$1"
            mkdir -p dist

            # Build for different platforms with proper naming
            GOOS=windows GOARCH=amd64 go build -o "dist/gh-comment-windows-amd64.exe"
            GOOS=windows GOARCH=386 go build -o "dist/gh-comment-windows-386.exe"
            GOOS=windows GOARCH=arm64 go build -o "dist/gh-comment-windows-arm64.exe"

            GOOS=darwin GOARCH=amd64 go build -o "dist/gh-comment-darwin-amd64"
            GOOS=darwin GOARCH=arm64 go build -o "dist/gh-comment-darwin-arm64"

            GOOS=linux GOARCH=amd64 go build -o "dist/gh-comment-linux-amd64"
            GOOS=linux GOARCH=386 go build -o "dist/gh-comment-linux-386"
            GOOS=linux GOARCH=arm go build -o "dist/gh-comment-linux-arm"
            GOOS=linux GOARCH=arm64 go build -o "dist/gh-comment-linux-arm64"

            GOOS=freebsd GOARCH=amd64 go build -o "dist/gh-comment-freebsd-amd64"
            GOOS=freebsd GOARCH=386 go build -o "dist/gh-comment-freebsd-386"
            GOOS=freebsd GOARCH=arm64 go build -o "dist/gh-comment-freebsd-arm64"

      - name: Create Release Notes
        id: release_notes
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

          # Generate release notes
          if [ -f CHANGELOG.md ]; then
            # Extract changelog section for this version if it exists
            awk "/^## \[$VERSION\]/ {flag=1; next} /^## \[/ && flag {exit} flag" CHANGELOG.md > release_notes.md
          else
            # Generate basic release notes
            echo "## What's Changed in $VERSION" > release_notes.md
            echo "" >> release_notes.md

            # Get commits since last tag
            LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
            if [ -n "$LAST_TAG" ]; then
              echo "### Changes since $LAST_TAG:" >> release_notes.md
              git log --oneline $LAST_TAG..HEAD --pretty=format:"- %s" >> release_notes.md
            else
              echo "### Features:" >> release_notes.md
              echo "- Strategic line-specific PR commenting for GitHub CLI" >> release_notes.md
              echo "- Unified comment system for both general PR discussion and line-specific code review" >> release_notes.md
              echo "- Smart suggestion expansion with \`[SUGGEST: code]\` syntax" >> release_notes.md
              echo "- Universal reply system with automatic API selection" >> release_notes.md
              echo "- Complete comment visibility with diff context" >> release_notes.md
            fi

            echo "" >> release_notes.md
            echo "### Installation" >> release_notes.md
            echo "" >> release_notes.md
            echo "#### Binary Installation (Recommended)" >> release_notes.md
            echo "\`\`\`bash" >> release_notes.md
            echo "gh extension install silouanwright/gh-comment" >> release_notes.md
            echo "\`\`\`" >> release_notes.md
            echo "" >> release_notes.md
            echo "#### Manual Installation" >> release_notes.md
            echo "Download the appropriate binary for your platform from the assets below." >> release_notes.md
            echo "" >> release_notes.md
            echo "### Updates" >> release_notes.md
            echo "\`\`\`bash" >> release_notes.md
            echo "gh extension upgrade silouanwright/gh-comment" >> release_notes.md
            echo "\`\`\`" >> release_notes.md
          fi

      - name: Update release with notes
        uses: softprops/action-gh-release@v2
        with:
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify success
        run: |
          echo "ðŸŽ‰ Successfully released ${{ steps.release_notes.outputs.VERSION }}"
          echo "ðŸ“¦ Binaries are now available for:"
          echo "  - Windows (amd64)"
          echo "  - macOS (amd64, arm64)"
          echo "  - Linux (amd64, arm64)"
          echo ""
          echo "Users can now install/upgrade with:"
          echo "  gh extension install silouanwright/gh-comment"
          echo "  gh extension upgrade silouanwright/gh-comment"
