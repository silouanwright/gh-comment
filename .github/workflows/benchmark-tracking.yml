name: Benchmark Tracking

on:
  push:
    branches: [ main ]
  schedule:
    # Run every Monday at 00:00 UTC
    - cron: '0 0 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  deployments: write

jobs:
  benchmark:
    name: Track Performance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run benchmarks
        run: |
          go test -bench=. -benchmem -run=^$ -count=10 ./... | tee benchmark.txt

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Go Benchmark
          tool: 'go'
          output-file-path: benchmark.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          # Show alert with comment when performance regression is detected
          alert-threshold: '120%'
          comment-on-alert: true
          # Store benchmark results in gh-pages branch
          gh-pages-branch: gh-pages
          benchmark-data-dir-path: benchmarks

      - name: Create performance badge
        if: github.ref == 'refs/heads/main'
        run: |
          # Extract key benchmark metrics for badge
          BENCH_NS=$(grep -E "BenchmarkListComments.*ns/op" benchmark.txt | awk '{print $3}' | head -1)
          if [ -n "$BENCH_NS" ]; then
            # Create a simple performance indicator
            if [ "$BENCH_NS" -lt 1000 ]; then
              COLOR="brightgreen"
            elif [ "$BENCH_NS" -lt 10000 ]; then
              COLOR="green"
            elif [ "$BENCH_NS" -lt 100000 ]; then
              COLOR="yellow"
            else
              COLOR="red"
            fi

            echo "Performance: ${BENCH_NS} ns/op"
            # You can integrate with shields.io or other badge services here
          fi

      - name: Check for performance regression
        run: |
          # This job primarily tracks performance over time
          # The PR job handles regression detection
          echo "Benchmark results stored for historical tracking"
